         TITLE ' SHOW AND EXPLAIN ALL TPVT FIELDS  '
************************************************************
*        'SHOWTPVT' OR 'LIST TPVT FIELDS AND EXPLAIN THEM' *
************************************************************
         SPACE
*
*        This program is in the Public Domain.
*
*        THIS PROGRAM WAS CONSTRUCTED FROM THE LPSCB PROGRAM,
*        WHICH WAS:
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. OCTOBER 19 1979.
*        DATE UPDATED. MAY 10, 1995   SAM GOLOB
*                      NOV 28, 2016   SAM GOLOB
*                      MAR 10, 2017   SAM GOLOB
*        DATE CHANGED. JAN 02, 2019   SAM GOLOB
*
*        ATTRIBUTES. RE-ENTRANT.
*
*        COMMENTS.
*            THIS TSO COMMAND SHOWS ALL THE FIELDS OF THE
*            UNDOCUMENTED IBM CONTROL BLOCK, TPVT, SHORT FOR
*            "TSO PARMLIB VECTOR TABLE", DESCRIBED BY THE IBM
*            INTERNAL MACRO, IKJTPVT, WRITTEN IN PL/X ONLY.
*
*            OF COURSE WE DON'T HAVE THE ORIGINAL IBM MACRO.
*            WE HAVE RECONSTRUCTED THE IKJTPVT MACRO IN
*            ASSEMBLER LANGUAGE, AND OUR DESCRIPTION OF IT,
*            AND ITS FIELDS, IS INCLUDED IN THIS SOURCE CODE.
*            THE FIELD NAMES IN OUR ASSEMBLER COPY OF THE
*            MACRO HAVE TO BE CONSIDERED AS ENTIRELY OUR OWN
*            DESCRIPTIONS, EVEN THOUGH SOME OF THEM MAY
*            CLOSELY RESEMBLE THEIR POSSIBLE IBM DESCRIPTIONS
*            (WHICH WE DON'T REALLY KNOW).
*
*        CHANGE LOG:
*           JDM - JIM MARSHALL
*           SBG - SAM GOLOB
*
*     These remarks pertain to the LPSCB program:
*     JDM    02APR91 - ADDED DSECTS TO REPLACE HARDCODED OFFSETS JDM1
*     SBG    28NOV16 - LIST 8 HEX DIGIT ADDRESSES INSTEAD OF 6.
*                      CHANGED AMODE TO 31. DIDN'T SEEM TO HURT.
*     SBG    10MAR17 - FIXES FOR 8-CHARACTER USERIDS.
*                      DEPENDS ON TSVT+6 BYTE. PROGRAM DEPENDS ON
*                      TSVT NOW, WHICH IT DIDN'T DEPEND ON BEFORE.
*
*     The remarks from here on, pertain to the SHOWTPVT program:
*     SBG    02JAN19 - Changed the program to display fields in the
*                      undocumented TPVT only.  It is now a new
*                      program, but many pieces of the old program
*                      remain.
*
*                      Please note that the TPVTUMXL field described
*                      in the TPVT, indicating whether 8-character
*                      userids are supported or not, seems to be just
*                      an "indicator of status" and not a switch to
*                      turn the 8-character userid capability on or
*                      off.
*
*                      The "real switch", that turns 8-character userid
*                      support on or off, is located at the TSVT+6
*                      location for one byte.
*
*                      This program actually reports the status of
*                      both bytes.  The "real switch" byte status is
*                      reported in the header of this program, where
*                      it says:  8-CHARACTER USERID SUPPORT IS: ON|OFF
*                      while the TPVTUMXL byte is reported in the
*                      detail part of the program below.
*
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   14,HEX
         MEND
         SPACE
         MACRO
&NAME    MSGZ  &AREA,&LEN
         LA    1,&AREA
         LA    0,&LEN
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    This macro must be included in this assembly, and is our         *
*    interpretation of IBM's "internal use only" control block        *
*    macro, IKJTPVT (which we haven't ever actually seen).            *
*  The names in this macro have been adjusted for format with CBMACS. *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJTPVT
TPVT     DSECT                         TSO PARMLIB VECTOR TABLE
TPVT_ID  DS    CL4'TPVT'            00 BLOCK ID
TPVT_LEN DS    H'72'                04 LENGTH OF TPVT
****     DS    H'220'                  LENGTH OF TPVT
TPVT_VERS DS   FL1'2'               06 VERSION
TPVT_MEM1 DS  0C'IKJTSO00'          07 CURRENT PARMLIB MEMBER  HTE25E2
TPVTFIL1 DS    X                 (above field was moved one byte down)
TPVT_MEM DS    CL8'IKJTSO00'        08 CURRENT PARMLIB MEMBER  HTE26E2
TPVT_GEN DS    F                    10 PARMLIB generation count
TPVTCTLT DS    V(CTLT)              14 IKJCTLT
TPVTCTLTLEN  DS F'60'               18 length of CTLT
         DS    4X                   1C
TPVTSEND DS    V(SCB)               20 IKJEESCB   (SYS1.BRODCAST)
TPVTALPL DS    V(ALPL)              24 ALPL       (ALLOCATE defaults)
TPVTTEST DS    V(TPT)               28 TPT (TEST)
TPVTXPRMD DS   V(XPRM)              2C INMXPARM   (XMIT)
TPVTCONSOLE DS V(CNPRM)             30 IKJCNPRM   (CONSOLE)
TPVTFCVEC DS   A,F                  34 FCVE       (Platform commands)
TPVTHELP DS    V(HCB)               3C IKJEFHCB   (HELP)
TPVTPPVEC DS   A,F                  40 PPVE       (Platform programs)
           ORG  TPVT+X'4C'
TPVTLOGON DS   X                    4C IKJTSOxx LOGON KEYWORD
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* The following bit settings must correspond to the same bit settings *
* in the TSVTFLG1 field of the TSVT (TSVT + X'5') - lower nibble only *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TPVTPHRS  EQU  X'08'                Password phrase support active
TPVTAPPL  EQU  X'04'                LOGON applid verification active
TPVTLGNH  EQU  X'02'                LOGONHERE support is active
TPVTLGPC  EQU  X'01'                LOGONPREPROMPT is active
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TPVTUMXL  DS   X                4D  MAXIMUM NUMBER OF CHARS IN USERID
*   This is a reflection of the value in TSVTUMXL, but the "real      *
*   switch" where the system "decides" if 8-character userids are     *
*   allowed, appears to be TSVT+X'6', not in this value.              *
*   Permissible values:  X'00' for pre z/OS 2.3 systems               *
*                        X'07' for z/OS 2.3 with 8-char uids off.     *
*                        X'08' for z/OS 2.3 with 8-char uids on.      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
           ORG  TPVT+X'50'
TPVTDSNAM  DS  CL44'SYS1.PARMLIB'   50 dsname
TPVTVOLSER DS  CL6'SYSCAT'          7C VOLSER
           DS  2X
TPVTSYSNAM DS  CL8'P390'            84 from system
TPVTUSERID DS  CL8'IBMUSERM'        8C by userid
TPVTHHMMSS DS  CL8'16:59:56'        94 at hh:mm:ss
TPVTYYMMDD DS  CL10'1998-10-29'     9C on yyyy-mm-dd
TPVTCPUIDP DS  XL2                  A6 CPUID prefix
TPVTCPUID  DS  F                    A8 CPUID
TPVTMODEL  DS  H                    AC CPU Model
TPVTUPDTIM DS  XL4                  AA Update Time
TPVTUPDDAT DS  XL4                  B2 Update Date
TPVTFEATURE DS  X                   B6 Feature
*              X'80'            Dynamic Broadcast Feature is available
TPVTFEATVER DS X                    B7 Feature Version
         ORG   TPVT+X'DC'              end of TPVT
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         GBLC  &SYSLVL
&SYSLVL  SETC  'ESA'                 370 OR ESA ?
*                                    SET ESA FOR TSO/E VERSION 2
*                                    SET 370 FOR MVS/370.
*   LOOK AT YOUR LEVEL OF IKJUPT TO SEE HOW MUCH CAN DISPLAY.
*   SEE BELOW LABEL :    DOUPT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         PRINT ON,GEN
SHOWTPVT AMODE 31                                                JDM1
SHOWTPVT RMODE 24                                                JDM1
SHOWTPVT CSECT
         USING *,R12,R10
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SHOWTPVT '
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL16' Public Domain '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LA    R10,2048(,R12)      Load second base
         LA    R10,2048(,R10)
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         MVI   LINE-1,C' '
         XC    LINKAREA(8),LINKAREA
         L     R0,=V(TODCNVRT)     ENTRY PT OF TODCNVRT PROGRAM
         ST    R0,ENTRY            SAVE ITS ENTRY POINT
         SPACE
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
         SPACE 1
************************************************************
*        SET UP PPL FOR PARSE                              *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(MYPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R13,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*        CALL THE PARSE SERVICE ROUTINE                    *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM1
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,CVTPARS         CVTPARS                       JDM1
         DROP  R15                                               JDM1
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK DS    0H
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT DS    0H
         SPACE 1
         LTR   R15,R15
         BNZ   EXIT12
         L     R3,MYANS
         USING IKJPARMD,R3
         L     R4,CPPLPSCB
         CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    TESTTSVT
         CLI   REALKW+1,2          'REAL' SPECIFIED
         BNE   TESTTSVT            NO, BRANCH
         L     R1,CVTPTR           YES, FIND PSCB VIA JSCB       JDM1
         USING CVTMAP,R1           GET ADDRESSABILITY            JDM1
         L     R1,CVTTCBP          POINT TO NEW TCB WORD         JDM1
         L     R1,4(,R1)           POINT TO OLD TCB WORD         JDM1
         DROP  R1                                                JDM1
         USING TCB,R1              ADDRESSABILITY TO TCB         JDM1
         L     R1,TCBJSCB          GET JSCB ADDRESS              JDM1
         DROP  R1                                                JDM1
         USING IEZJSCB,R1          GET ADDRESSABILITY            JDM1
         L     R1,JSCBPSCB         GET PSCB ADDRESS              JDM1
         ST    R1,SAVEPSCB         SAVE IT EVEN IF WE DON'T USE IT
         DROP  R1                                                JDM1
         LTR   R4,R1               IS THERE A PSCB
         BZ    EXIT12              NO, BRANCH
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        TEST FOR PRESENCE OF 8-CHARACTER USERID SUPPORT            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TESTTSVT DS    0H                  TEACH PGM ABOUT 8-CHAR ID SUPPORT
         ST    R6,SAVER6A          SAVE WORK REGISTER
         XC    FLAG1,FLAG1         CLEAR FLAG
         L     R6,16               CVT
         L     R6,X'9C'(,R6)       TSVT
         ST    R6,TSVTADDR         SAVE ADDRESS OF TSVT
         L     R6,X'4C'(,R6)       TPVT ADDRESS
         ST    R6,TPVTADDR         SAVE ADDRESS OF TPVT
         L     R6,TSVTADDR         RELOAD TSVT ADDRESS FOR TEST
         TM    6(R6),X'08'         IS THIS FIELD 08?
         BO    TEST8CHR            FLIP FLAG BIT
         CLI   6(R6),X'00'         IS IT 00, THE OLD WAY?
         BE    TEST8END            YES. DON'T FLIP ANYTHING
TEST7CHR DS    0H                  NOT 00 AND NOT 08.
         OI    FLAG1,X'01'         SUPPORT ON BUT 7-CHAR UID LIMIT
         B     TEST8END            THEN GET OUT
TEST8CHR DS    0H                  8-CHAR SUPPORT IS ON
         OI    FLAG1,X'02'         SUPPORT ON AND 8-CHAR UID LIMIT
TEST8END DS    0H                  END OF ROUTINE
         L     R6,SAVER6A          RESTORE WORK REGISTER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT TITLE OF THIS REPORT                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINET(45),TITLELIT     Program title
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(45),TITLEUND     Underlines
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(44),TITLEEX0     Explanation of program purpose
         BAL   R8,MSG
         MVC   LINET(44),TITLEEX1     Underlines
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   IF 8-CHARACTER USERID SUPPORT IS PRESENT, THEN SEND MESSAGE     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              It is important to know if there exists              *
*              8-character userid support.                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EIGHTCID DS    0H
         CLI   FLAG1,X'00'         NO 8-CHARACTER SUPPORT
         BE    EIGHTOUT            THEN GET OUT
         TM    FLAG1,X'01'         SUPPORT IS PRESENT BUT NOT ON
         BO    EIGHTOFF            THEN REPORT IT
         TM    FLAG1,X'02'         SUPPORT IS PRESENT AND IS ON
         BO    EIGHTON             THEN REPORT IT
*                                  MSG IF 8-CHAR UID'S IN EFFECT
EIGHTOFF DS    0H                       OFF
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG04),MSG04      YES, BUT
         BAL   R8,MSG                   SUPPORT IS TURNED OFF
         B     EIGHTOUT
EIGHTON  DS    0H                       ON
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG05),MSG05      YES, AND
         BAL   R8,MSG                   SUPPORT IS TURNED ON
         B     EIGHTOUT
EIGHTOUT DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                 PRINT THE ADDRESS OF THE TPVT                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         L     R4,TPVTADDR
         HEX   LINE+33,4,TPVTADDR
         MVC   LINE+17(L'MSG01),MSG01
         MSGZ  LINE,L'MSG01+28
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT REPORT TITLE HEADERS                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINE(49),TITLEHDR
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINE(49),TITLEHUN
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                FORMAT FIELDS OF THE TPVT LAYOUT                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GOTTPVT  DS    0H
         USING TPVT,R4
         MVC   LINE,LINE-1
         L     R4,TPVTADDR
         MVC   LINETXT,TEXT_ID
*        HEX   LINEX,4,TPVT_ID
         MVC   LINEX(4),TPVT_ID
         MVC   LINEC(24),=C'Control block identifier'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_LEN
         HEX   LINEX,2,TPVT_LEN
         MVC   LINEC(18),=C'TPVT length in hex'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_VER
         HEX   LINEX,1,TPVT_VERS
         MVC   LINEC(18),=C'TPVT version level'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_FL1
         HEX   LINEX,1,TPVTFIL1
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_MEM
*        HEX   LINEX,8,TPVT_MEM
         MVC   LINEX(8),TPVT_MEM
         MVC   LINEC(32),=C'PARMLIB member filling this TPVT'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_GEN
         HEX   LINEX,4,TPVT_GEN
         MVC   LINEC(32),=C'TPVT generation number, fullword'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXT_CTL
         HEX   LINEX,4,TPVTCTLT
         MVC   LINEC(32),=C'CTLT addr, points to auth tables'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTCTLN
         HEX   LINEX,4,TPVTCTLTLEN
         MVC   LINEC(25),=C'CTLT control block length'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSV1
         HEX   LINEX,4,TPVT+X'1C'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTSEND
         HEX   LINEX,4,TPVTSEND
         MVC   LINEC(33),=C'IKJEESCB-SEND PARMLIB contr block'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTALPL
         HEX   LINEX,4,TPVTALPL
         MVC   LINEC(29),=C'ALPL addr, default allocation'
         L     R8,TPVTALPL
         TM    12(R8),X'80'
         BO    ALPLOLD
         TM    12(R8),X'40'
         BO    ALPLSHR
         B     ALPLEND
ALPLOLD  DS    0H
         MVC   LINEC+30(3),=C'OLD'
         B     ALPLEND
ALPLSHR  DS    0H
         MVC   LINEC+30(3),=C'SHR'
ALPLEND  DS    0H
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTTEST
         HEX   LINEX,4,TPVTTEST
         MVC   LINEC(32),=C'TPT addr, TEST cmd control block'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTXPRM
         HEX   LINEX,4,TPVTXPRMD
         MVC   LINEC(32),=C'INMXPARM address-SEND parameters'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTCNSL
         HEX   LINEX,4,TPVTCONSOLE
         MVC   LINEC(30),=C'TSO CONSOLE command parameters'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTFCVE
         HEX   LINEX,4,TPVTFCVEC
         MVC   LINEC(31),=C'Address-PLATFORM commands table'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTHELP
         HEX   LINEX,4,TPVTHELP
         MVC   LINEC(26),=C'Address-HELP datasets list'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTPPVE
         HEX   LINEX,4,TPVTPPVEC
         MVC   LINEC(31),=C'Address-PLATFORM programs table'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSV2
         HEX   LINEX,8,TPVT+X'44'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTLOGO
         HEX   LINEX,1,TPVTLOGON
         MVC   LINEC(27),=C'LOGON option fields - bits:'
         BAL   R8,MSG
         MVC   LINEC(30),TEXTLG1A
         BAL   R8,MSG
         MVC   LINEC(30),TEXTLG1B
         BAL   R8,MSG
         MVC   LINEC(30),TEXTLG1C
         BAL   R8,MSG
         MVC   LINEC(30),TEXTLG1D
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUMXL
         HEX   LINEX,1,TPVTUMXL
         MVC   LINEC(30),=C'8-char userid status indicator'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSV3
         HEX   LINEX,2,TPVT+X'4E'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTDSNM
         MVC   LINEX(44),TPVTDSNAM
         MVC   LINE+58(14),=C'PARMLIB dsname'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTVOLS
         MVC   LINEX(6),TPVTVOLSER
         MVC   LINE+58(14),=C'and its volser'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSV4
         HEX   LINEX,2,TPVT+X'82'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTSNAM
         MVC   LINEX(8),TPVTSYSNAM
         MVC   LINEC(25),=C'ID of this system or LPAR'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUSID
         MVC   LINEX(8),TPVTUSERID
         MVC   LINEC(31),=C'Who did the last PARMLIB update'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTTIME
         MVC   LINEX(8),TPVTHHMMSS
         MVC   LINEC(28),=C'Time HHMMSS when it was done'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTDATE
         MVC   LINEX(10),TPVTYYMMDD
         MVC   LINEC(30),=C'Date YYYYMMDD when it was done'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTCPIP
         HEX   LINEX,2,TPVTCPUIDP
         MVC   LINEC(12),=C'CPUID prefix'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTCPUI
         HEX   LINEX,4,TPVTCPUID
         MVC   LINEC(21),=C'CPUID of this machine'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTMODN
         HEX   LINEX,2,TPVTMODEL
         MVC   LINEC(16),=C'CPU model number'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUPDT
         HEX   LINEX,4,TPVTUPDTIM
         MVC   LINEC(25),=C'TIME when updated, in hex'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTUPDD
         HEX   LINEX,4,TPVTUPDDAT
         MVC   LINEC(25),=C'DATE when updated, in hex'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTFEAT
         HEX   LINEX,1,TPVTFEATURE
         MVC   LINEC(13),=C'Feature codes'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTFEAV
         HEX   LINEX,1,TPVTFEATVER
         MVC   LINEC(15),=C'Feature version'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRSV5         SPLIT THE RESERVE AREA
         HEX   LINEX,18,TPVT+X'B8'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TEXTRS5A         INTO TWO LINES.
         HEX   LINEX,18,TPVT+X'CA'
         BAL   R8,MSG
         SPACE
TSVTEND  B     EXIT0
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     ROUTINE TO SHOW HEXADECIMAL VALUES AS DISPLAY CHARACTERS      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             DISPLAY A MESSAGE W/PUTLINE
         LA    R0,72
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R8
         SPACE
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*        CONSTANTS                                         *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         DS    0F
BLANKS   DC    C'                '
MSG01    DC    C'TPVT ADDRESS:'
MSG02    DC    C'UPT FROM PSCB   '
MSG02A   DC    C'UPT FROM CPPL   '
MSG03    DC    C'ECT ADDRESS '
MSG04    DC    C'8-CHARACTER USERID SUPPORT IS: OFF'
MSG05    DC    C'8-CHARACTER USERID SUPPORT IS: ON '
TITLELIT DC    C'SHOW TPVT - TSO PARMLIB VECTOR TABLE - FIELDS'
TITLEUND DC    C'---- ----   --- ------- ------ -----   ------'
TITLEEX0 DC    C'  Display of Common Storage Deriving from   '
TITLEEX1 DC    C'        the IKJTSOxx PARMLIB member         '
TITLEHDR DC    C'  addr  field        value            explanation'
TITLEHUN DC    C'  ----  -----        -----            -----------'
TEXT_ID  DC    C'    +0  TPVT_ID     '        4 BYTES
TEXT_LEN DC    C'    +4  TPVT_LEN    '        2 BYTES
TEXT_VER DC    C'    +6  TPVT_VERS   '        1 BYTE
TEXT_FL1 DC    C'    +7  TPVT_FILLER1'        1 BYTE
TEXT_MEM DC    C'    +8  TPVT_MEM    '        8 BYTES
TEXT_GEN DC    C'   +10  TPVT_GEN    '        4 BYTES
TEXT_CTL DC    C'   +14  TPVTCTLT    '        4 BYTES
TEXTCTLN DC    C'   +18  TPVTCTLTLEN '        4 BYTES
TEXTRSV1 DC    C'   +1C  RESERVED 1  '        4 BYTES
TEXTSEND DC    C'   +20  TPVTSEND    '        4 BYTES
TEXTALPL DC    C'   +24  TPVTALPL    '        4 BYTES
TEXTTEST DC    C'   +28  TPVTTEST    '        4 BYTES
TEXTXPRM DC    C'   +2C  TPVTXPRMD   '        4 BYTES
TEXTCNSL DC    C'   +30  TPVTCONSOLE '        4 BYTES
TEXTFCVE DC    C'   +34  TPVTFCVEC   '        8 BYTES
TEXTHELP DC    C'   +3C  TPVTHELP    '        4 BYTES
TEXTPPVE DC    C'   +40  TPVTPPVEC   '        8 BYTES
TEXTRSV2 DC    C'   +44  RESERVED 2  '        8 BYTES
TEXTLOGO DC    C'   +4C  TPVTLOGON   '        1 BYTE
TEXTUMXL DC    C'   +4D  TPVTUMXL    '        1 BYTE
TEXTRSV3 DC    C'   +4E  RESERVED 3  '        2 BYTES
TEXTDSNM DC    C'   +50  TPVTDSNAM   '       44 BYTES
TEXTVOLS DC    C'   +7C  TPVTVOLSER  '        6 BYTES
TEXTRSV4 DC    C'   +82  RESERVED 4  '        2 BYTES
TEXTSNAM DC    C'   +84  TPVTSYSNAM  '        8 BYTES
TEXTUSID DC    C'   +8C  TPVTUSERID  '        8 BYTES
TEXTTIME DC    C'   +94  TPVTHHMMSS  '        8 BYTES
TEXTDATE DC    C'   +9C  TPVTYYMMDD  '       10 BYTES
TEXTCPIP DC    C'   +A6  TPVTCPUIDP  '        2 BYTES
TEXTCPUI DC    C'   +A8  TPVTCPUID   '        4 BYTES
TEXTMODN DC    C'   +AC  TPVTMODEL   '        2 BYTES
TEXTUPDT DC    C'   +AE  TPVTUPDTIM  '        4 BYTES
TEXTUPDD DC    C'   +B2  TPVTUPDDAT  '        4 BYTES
TEXTFEAT DC    C'   +B6  TPVTFEATURE '        1 BYTE
TEXTFEAV DC    C'   +B7  TPVTFEATVER '        1 BYTE
TEXTRSV5 DC    C'   +B8  RESERVED 5  '       18 BYTES
TEXTRS5A DC    C'   +CA  RESERVED 5A '       18 BYTES
TEXTLG1A DC    C'Password Phrase Support     08'
TEXTLG1B DC    C'Applid Verification         04'
TEXTLG1C DC    C'LOGONHERE Support           02'
TEXTLG1D DC    C'Password Preprompt Support  01'
         SPACE
************************************************************
*        PARSE PCL                                         *
************************************************************
         SPACE
         PRINT GEN
MYPCL    IKJPARM
REALKW   IKJKEYWD
         IKJNAME 'CPPL'
         IKJNAME 'REAL'
UPTKW    IKJKEYWD
         IKJNAME 'UPT'
ECTKW    IKJKEYWD
         IKJNAME 'ECT'
ALLKW    IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*        DSECTS                                            *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D                   DOUBLEWORD WORK AREA
LINKAREA DS    2F
ADDRESS  DS    F
TSVTADDR DS    F                   TSVTADDR
TPVTADDR DS    F                   TPVTADDR
UPTADDR  DS    F                   UPT FROM PSCB
UPTADDRC DS    F                   UPT FROM CPPL
ECTADDR  DS    F
SAVER6A  DS    F
SAVEPSCB DS    F                   WE DON'T USE IT, BUT WE HAVE IT
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
FLAG1    DS    X
*                                  X'00' IF NO 8-CHAR UID SUPPORT
*                                  X'01' IF 8-CHAR SUPPORT BUT NOT ON
*                                  X'02' IF 8-CHAR SUPPORT IS ON
LINEB    DS    C                   LINE-1
LINE     DS    CL120
LINETXT  EQU   LINE,20
LINEX    EQU   LINE+21
LINEC    EQU   LINE+38
LINET    EQU   LINE+8
LINEU    EQU   LINE+13
ENTRY    DS    F                1  LOADED ENTRY POINT OF TODCNVRT
PARAM    DS    5F               2  PARAMETER LIST FOR TODCNVRT PROGRAM
CLOCK    DS    D                3  TARGET AREA OF STCK INSTRUCTION
TIMEZONE DS    F                4  FILLED IN FROM CVTTZ
ANSWER   DS    CL64             5  ANSWER PLACE FOR TODCNVRT PROGRAM
         DS    C
TIMEFMT  DS    CL64                FORMAT FOR DATE AND TIME DISPLAY
OPTION   DS    C
WORKA    DS    10D
PARMSAVE DS    F
@DATAL   EQU   *-@DATA
         SPACE 1                                                 JDM1
         CVT   DSECT=YES,LIST=NO                                 JDM1
         SPACE 1                                                 JDM1
         PRINT ON,GEN
         IKJTCB DSECT=YES,LIST=NO                                JDM1
         SPACE 1                                                 JDM1
         IKJPSCB
         SPACE
         IKJTPVT
         SPACE
         IEZJSCB                                                 JDM1
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         PRINT OFF
         YREGS
         END
         TITLE '   T O D C N V R T  '
*---------------------------------------------------------------------*
*                                                                     *
*        'TODCNVRT'                                                   *
*                                                                     *
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.    *
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.            *
*        DATE WRITTEN. DECEMBER 7 1976.                               *
*        DATE UPDATED. JANUARY 31 1977.                               *
*        ATTRIBUTES. RE-ENTRANT.                                      *
*                                                                     *
*        DESCRIPTION.                                                 *
*         THIS SUBPROGRAM CONVERTS THE RESULTS OF A                   *
*         'STORE CLOCK' INSTRUCTION TO EBCDIC. THE LOGIC              *
*         IS TAKEN STRAIGHT OUT OF MODULE 'AMDPRSEG' IN               *
*         AMDPRDMP (5752-SC113), VS2 RELEASE 3.0                      *
*         WITH A FEW MODIFICATIONS TO MAKE THE PASSING                *
*         OF PARAMETERS MORE CONVENTIONAL.                            *
*                                                                     *
*            INPUT - LIST OF 5 ADDRESSES POINTED TO BY REG 1          *
*                       1) PTR TO CVTTZ VALUE                         *
*                       2) PTR TO 8-BYTE TOD CLOCK VALUE              *
*                       3) PTR TO OUTPUT AREA                         *
*                       4) PTR TO OPTION BYTE X'01' OR X'02'          *
*                       5) PTR TO 80-BYTE WORKAREA                    *
*                    REG 15 = ENTRY ADDRESS  REG 14 = RETURN ADDRES   *
*                    REG 13 = 72 BYTE REGISTER SAVEAREA ADDRESS       *
*                                                                     *
*            OUTPUT - EBCDIC TIME IN OUTPUT AREA                      *
*                     REG 15 = 4 IF INPUT CLOCK TIME ALL ZEROES       *
*                     REG 15 = 0 ALL OTHER CASES.                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
TODCNVRT CSECT
         SAVE  (14,12),,&SYSDATE
         LR    R12,15
         USING TODCNVRT,R12
         L     R1,16(,R1)              SAVEPTR
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R14,R13
         LR    R13,R1
         L     R1,24(,R14)             RESTORE R1
         USING MYDSECT,R13
         USING PARAMS,R1
         SPACE 1
         L     R7,TODPTR
         MVC   CVRTAREA(8),0(R7)
         SPACE
*---------------------------------------------------------------------*
*        CHANGE TOD TO LOCAL TIME
*---------------------------------------------------------------------*
         SPACE
         L     R7,CVTTZPTR         GET ADDR OF TZ FIELD
         L     R7,0(,R7)           R7 = TZ VALUE
         L     R15,MINUS1
         CLR   R7,R15              IS TZ = MINUS 1?
         BNE   TZADD               NO - USE TZ FROM CALLER
         L     R7,16               YES - USE TZ FROM CVT
         L     R7,X'598'(,R7)      GET CVTTZ
TZADD    DS    0H
         AL    R7,CVRTAREA         ADD TZ TO FIRST WORD
         ST    R7,CVRTAREA
         SPACE
         LM    R4,R5,CVRTAREA
         SRDL  R4,12               REMOVE INSIGNIFICANT BITS
         D     R4,SIXTYMIL         DIVIDE BY 60,000,000
         SPACE
         L     R7,OPTION
         CLI   0(R7),2
         BE    RELTVTME
         B     FULLDATE
         SPACE
*---------------------------------------------------------------------*
*        RELATIVE TIME CONVERSION -- THIS ROUTINE CONVERTS THE TOD
*        VALUE TO RELATIVE SECONDS.MICROSECONDS FROM 0 A.M. OF THE
*        CURRENT DAY REFLECTED BY THE TOD VALUE. THE CONVERTED TIME
*        IS PLACED LEFT JUSTIFIED IN THE OUTPUT AREA IN THE FORM
*        SSSSS.MMMMMM (EBCDIC).   UPON ENTRY TO THIS ROUTINE THE TOD
*        VALUE HAS ALREADY BEEN CHANGED TO TOTAL MINUTES (IN R5) AND
*        NUMBER OF MICROSECONDS INTO CURRENT MINUTE (IN R4).
*---------------------------------------------------------------------*
         SPACE
RELTVTME DS    0H
         L     R7,TODPTR
         CLC   0(8,R7),=XL8'00'
         BNE   RNOTZERO
         L     R7,OUTAREA
         MVI   12(R7),C' '
         MVC   13(11,R7),12(R7)
         MVC   0(12,R7),=C'00000.000000'
         LA    R15,4
         B     EXIT
         SPACE
RNOTZERO DS    0H
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF SECONDS INTO CURRENT MINUTE
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R4
         SLR   R14,R14
         D     R14,MILLION
         ST    R15,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MICROSEC INTO CURRENT SECOND
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14              REMAINDER IN R4
         SPACE
         L     R2,OUTAREA
         LA    R2,6(,R2)           OUT LOC FOR MICROSEC
         SPACE
*---------------------------------------------------------------------*
*        CONVERT MICROSEC TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(6,R2),CVRTAREA+4(4)
         OI    5(R2),X'F0'
         SPACE
         L     R7,OUTAREA
         MVI   5(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF SECONDS INTO CURRENT DAY
*        AND CONVERT TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R5              R4=((R5//1440)*60)+SECONDS
         SRDA  R14,32
         D     R14,=F'1440'
         MH    R14,=H'60'
         LA    R15,TIMELEFT
         LA    R14,0(,R15)         ADD SECONDS
         LR    R4,R14
         SPACE
         LR    R2,R7               POINT TO OUTPUT AREA
         CVD   R4,CVRTAREA
         UNPK  0(5,R2),CVRTAREA+5(3)  UNPACK SECONDS
         OI    4(R2),X'F0'
         SPACE
         B     EXIT0
         SPACE
*---------------------------------------------------------------------*
*        FULL DATE AND TIME CONVERSION -- THIS ROUTINE
*        CONVERTS THE TOD VALUE TO YEAR, JULIAN DAY, HOURS
*        MINUTES, SECONDS, AND MICROSECONDS. THE CONVERTED
*        TIME IS PLACED LEFT-JUSTIFIED IN THE OUTPUT AREA
*        IN THE FORM YYYYDDDHH.MM.SS.MMMMMM (EBCDIC). UPON
*        ENTRY TO THIS ROUTINE, THE TOD VALUE HAS ALREADY
*        BEEN CHANGED TO TOTAL MINUTES SINCE EPOCH (IN R5)
*        AND NUMBER OF MICROSECS INTO CURRENT MINUTE (R4).
*---------------------------------------------------------------------*
         SPACE
FULLDATE DS    0H
         L     R7,TODPTR
         CLC   0(8,R7),=XL8'00'
         BNE   FNOTZERO
         L     R7,OUTAREA
         MVI   22(R7),C' '
         MVI   23(R7),C' '
         MVC   0(22,R7),=C'000000000.00.00.000000'
         LA    R15,4
         B     EXIT
         SPACE
FNOTZERO DS    0H
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NUMBER OF SECONDS (R4/1,000,000)
*---------------------------------------------------------------------*
         SPACE
         LA    R7,TIMELEFT
         LR    R15,R4
         SLR   R14,R14
         D     R14,MILLION
         ST    R15,0(,R7)
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MICROSECONDS (R4//1,000,000)
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
*---------------------------------------------------------------------*
*        CONVERT MICROSEC TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         L     R7,OUTAREA
         LA    R2,16(,R7)
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(6,R2),CVRTAREA+4(4)
         OI    5(R2),X'F0'
         SPACE
         MVI   15(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CONVERT SECONDS TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         L     R4,TIMELEFT
         LA    R2,13(,R7)
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
         MVI   12(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MINUTES INTO CURRENT HOUR.
*        R5 CONTAINS TOTAL NO. OF MINUTES FROM THE EPOCH.
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R5
         SLR   R14,R14
         D     R14,=F'60'
         ST    R15,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE MINUTES INTO CURRENT HOUR
*        R4 = R5//60
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
         LA    R2,10(,R7)
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
         MVI   9(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF HOURS INTO CURRENT DAY.
*        TIMELEFT CONTAINS TOTAL NO. OF HOURS SINCE EPOCH.
*---------------------------------------------------------------------*
         SPACE
         L     R5,TIMELEFT
         LR    R15,R5
         SLR   R14,R14
         D     R14,=F'24'
         ST    R15,TIMELEFT        TOTAL DAYS SINCE EPOCH
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF HOURS INTO CURRENT DAY.
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
         LA    R2,7(,R7)
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE THE CURRENT YEAR AND JULIAN DAY
*        USING 'TIMELEFT' WHICH CONTAINS THE TOTAL NUMBER
*        OF ELAPSED DAYS SINCE 1900. FIRST CHECK WHETHER
*        THE TIME IS IN THE 1900 THRU 1903 ERA (I.E. LESS
*        THAN 1460 ELAPSED DAYS). IF SO, THE TIME MUST BE
*        HANDLED IN A SPECIAL WAY SINCE 1900 IS NOT A LEAP
*        YEAR AND EACH YEAR IN THAT 4 YEAR SPAN THUS CON-
*        TAINS 365 DAYS. IF THE ELAPSED TIME HOWEVER IS
*        GREATER THAN 1459 DAYS, THEN EVERY 4 YEARS CON-
*        TAIN 1461 DAYS RATHER THAN 1460 AND THE FIRST
*        YEAR OF EACH GROUP IS A LEAP YEAR. THESE FOUR
*        YEAR GROUPS ARE REFERRED TO AS LEAP YEAR GROUPS.
*        THE YEAR AND THE DAY WHEN THE ELAPSED TIME FALLS
*        INTO ONE OF THESE GROUPS MUST BE CALCULATED USING
*        STANDARD FORMULAS DIFFERENT FROM THE FORMULAS
*        USED WHEN THE TIME IS WITHIN 1900 TO 1903.
*---------------------------------------------------------------------*
         SPACE
         L     R7,TIMELEFT
         CH    R7,=H'1460'
         BNL   POST1903
         SPACE
NOLEAPYR DS    0H
         SPACE
*---------------------------------------------------------------------*
*        R3 = (TIMELEFT//365)+1   CURRENT DAY
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R7
         SRDA  R14,32
         D     R14,=F'365'
         AH    R14,=H'1'
         LR    R3,R14
         SPACE
*---------------------------------------------------------------------*
*        R6 = (TIMELEFT/365)     CURRENT YEAR
*---------------------------------------------------------------------*
         SPACE
         AH    R15,=H'1900'
         LR    R6,R15
         B     DATECOM
         SPACE
*---------------------------------------------------------------------*
*        THE TIME ELAPSED IS 1460 OR MORE DAYS.
*        CALCULATE R5, THE RELATIVE LEAP YEAR GROUP SINCE
*        1904, AND R4, THE NUMBER OF DAYS ELAPSED IN THE
*        CURRENT LEAP YEAR GROUP. USE THESE VALUES IN THE
*        FORMULAS.  IN THE FORMULA USED TO CALCULATE THE
*        JULIAN DAY, THE EXPRESSION IN PARENTHESES IS THE
*        NUMBER OF WHOLE DAYS THAT HAVE PAST IN THE
*        CURRENT YEAR. BECAUSE THE CURRENT DAY HAS NOT YET
*        ELAPSED, IT IS NOT INCLUDED IN THE RESULT PRO-
*        DUCED BY THE EXPRESSION AND THEREFORE 1 MUST BE
*        ADDED TO GET THE ACTUAL JULIAN DAY.
*        WITHIN THE EXPRESSION THE FIRST TERM, R, MUST BE
*        ADJUSTED BY 1 (I.E, L/731) IF THE TOTAL DAYS INTO
*        THE LEAP YEAR GROUP IS GREATER THAN OR EQUAL TO
*        2 YEARS, AND AGAIN BY 1 (I.E, L/1096) IF THE
*        TOTAL DAYS IS EQUAL TO OR GREATER THAN 3 YEARS.
*        THE AFFECT OF THIS IS THAT THE 2ND AND 3RD YEARS
*        ARE FORCED TO 366 DAYS ONCE THE TOTAL DAYS INTO
*        THE GROUP EXCEEDS EACH OF THESE YEARS. THIS IS
*        NECESSARY BECAUSE A DIVISOR OF 366 IS USED.
*        THE SECOND TERM (W * 4) YIELDS THE RELATIVE
*        NUMBER OF YEARS SINCE 1904 UP TO AND INCLUDING
*        THE LEAP YEAR IN THE CURRENT GROUP. THE THIRD
*        TERM ( (L-1)/365 ) YIELDS THE RELATIVE YEAR
*        WITHIN THE CURRENT LEAP YEAR GROUP. THUS IF THE
*        CURRENT YEAR IS A LEAP YEAR THE RELATIVE YEAR IS
*        ZERO AND THE THIRD TERM WILL RESULT IN ZERO.
*---------------------------------------------------------------------*
         SPACE
POST1903 DS    0H
LEAPYR   DS    0H
         SPACE
*---------------------------------------------------------------------*
*        TIMELEFT=TIMELEFT-1460  1904 BASE
*---------------------------------------------------------------------*
         SPACE
         L     R7,TIMELEFT
         SH    R7,=H'1460'
         STH   R7,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        R5 = TIMELEFT/1461
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R7
         SRDA  R14,32
         D     R14,=F'1461'
         LR    R5,R15
         SPACE
*---------------------------------------------------------------------*
*        R4 = TIMELEFT//1461
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
*---------------------------------------------------------------------*
*        R3 = ((L+L/731+L/1096)//336)+1  JULIAN DAY
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R4
         SLR   R14,R14
         D     R14,=F'731'
         LR    R14,R15
         ALR   R14,R4
         LR    R3,R14
         LR    R15,R4
         SLR   R14,R14
         D     R14,=F'1096'
         LR    R14,R15
         ALR   R14,R3
         SRDA  R14,32
         D     R14,=F'366'
         AH    R14,=H'1'
         LR    R3,R14
         SPACE
*---------------------------------------------------------------------*
*        R6 = 1904+(W*4)+(L-1)/365       YEAR
*---------------------------------------------------------------------*
         SPACE
         LR    R6,R5
         SLA   R6,2
         AH    R6,=H'1904'
         LR    R14,R4
         BCTR  R14,0
         SRDA  R14,32
         D     R14,=F'365'
         ALR   R6,R15
         SPACE
DATECOM  DS    0H
         L     R7,OUTAREA
         LA    R2,4(,R7)
         CVD   R3,CVRTAREA
         UNPK  0(3,R2),CVRTAREA+6(2)
         OI    2(R2),X'F0'
         SPACE
         LA    R2,0(,R7)
         CVD   R6,CVRTAREA
         UNPK  0(4,R2),CVRTAREA+5(3)
         OI    3(R2),X'F0'
         SPACE
EXIT0    SR    15,15
EXIT     LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         LM    14,12,12(13)
         BR    14
         SPACE
*---------------------------------------------------------------------*
*        CONSTANTS
*---------------------------------------------------------------------*
         SPACE
MILLION  DC    F'1000000'
SIXTYMIL DC    F'60000000'
MINUS1   DC    F'-1'
         LTORG
         SPACE
*---------------------------------------------------------------------*
*        DSECTS
*---------------------------------------------------------------------*
         SPACE
MYDSECT  DSECT
TIMELEFT DS    0F                  1ST FULLWORD OF SAVEAREA
         DS    18F                 REGISTER SAVEAREA
CVRTAREA DS    D
MYDSECTL EQU   *-MYDSECT
         SPACE
PARAMS   DSECT
CVTTZPTR DS    A                   ADDR OF CVTTZ VALUE
TODPTR   DS    A                   ADDR OF TOD CLOCK VALUE
OUTAREA  DS    A                   ADDR OF OUTPUT AREA
OPTION   DS    A                   ADDR OF OPTION BYTE
SAVEPTR  DS    A                   ADDR OF SAVEAREA
         SPACE
         YREGS
         END

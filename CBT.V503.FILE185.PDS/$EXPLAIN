                 A SHORT EXPLANATION OF THIS FILE

* * I M P O R T A N T * * I M P O R T A N T * * I M P O R T A N T * *
    -----------------     -----------------     -----------------
THE SUBMITTER OF THIS MATERIAL ASSUMES NO RESPONSIBILITY FOR ANY
DAMAGE OR ANY HARM WHATSOEVER, RESULTING FROM THE USE OF THIS MATERIAL,
OR FROM THE USE OF ANY OTHER MATERIAL ON THIS TAPE.  THIS MATERIAL WAS
CONTRIBUTED SO IT CAN POTENTIALLY BENEFIT AN INSTALLATION THROUGH THE
ENHANCED ABILITY OF ITS SUPPORT PERSONNEL TO DO THEIR REQUIRED JOBS,
AS DETERMINED BY THEIR EMPLOYERS.
    -------------------------------------------------------------
* * I M P O R T A N T * * I M P O R T A N T * * I M P O R T A N T * *

Note.  More information on this subject is now available.
       See member @ARTICLE in this pds (File 185).
       See also, the entire File 797.  Powerful new tools are there.

This source file (185) and the LOADLIB member (in TSO XMIT format)
which creates a load library, enable the systems programmer to
privately authorize TSO commands and not give this privilege to the
rest of the TSO users.

The trick of doing this depends on two things:
    1 - You have access to an APF authorized STEPLIB DD in your
         TSO Logon PROC.
    2 - You have TSO/E Version 2 or higher (although the same idea
         applies to all of the old releases of TSO for way back,
         but it was implemented differently there.)

There are tables that TSO uses to determine whether an authorized
command or program should be permitted to run.  These tables used to
be inside of module IKJEFT02, but now, IBM has separated them out into
a separate load module IKJTABLS.  The reason for that is to make these
tables independent of which release of TSO you are running.  With
TSO/E Version 2, there is now a parmlib member IKJTSOxx which
overrides IKJTABLS when IKJTABLS is in LPALIB.  However, if you have a
copy of IKJTABLS in an APF authorized STEPLIB DD, IKJTABLS overrides
both the IKJTSOxx parmlib member and the copy of IKJTABLS in
SYS1.LPALIB.  If for some reason, the APF authorization of the STEPLIB
DD goes away, then the copy of IKJTABLS that is there, does not
override IKJTSOxx anymore.

Thus it is possible that when an APF authorized load library which
contains a copy of IKJTABLS is run by you, in your LOGON PROC, as a
STEPLIB DD in an APF authorized manner, then THAT COPY of IKJTABLS
"rules" for you.  But if the exact same load library is also in the
linklist for everyone (even if it is APF authorized), but the other
people are not running it as a STEPLIB DD in their LOGON PROC, then
IKJTSOxx "rules" for them.  Therefore on the exact same running system
and at the exact same time, YOU have one set of authorized programs,
and the OTHER PEOPLE have a completely different set.  I call this
"personal TSO authorization", and it was made possible by the loophole
built into TSO, that IKJTABLS in an "APF authorized STEPLIB DD"
overrides all other copies of the authorization tables in the system.

This principle also applies when running TSO-in-batch.  A STEPLIB DD
to an APF authorized load library containing a copy of IKJTABLS, will
allow an APF authorized TSO command to run in batch mode, according
to the entries in that copy of the IKJTABLS load module.

So what we do, is to make a copy of IKJTABLS which contains all the
entries in your IKJTSOxx parmlib member, plus more, plus a lot of new
blank entries for expansion.  When we do this, your powers do not
decrease, but they are added to.  We put this copy of IKJTABLS into
an APF authorized STEPLIB DD in your LOGON PROC, so it COMPLETELY
OVERRIDES the table from IKJTSOxx that is in use by everyone else.

As shipped, IKJTABLS is rather small, and has four csects:
IKJEFTE2, IKJEFTE8, IKJEFTNS, and IKJEFTAP.  See the "TSO Customization"
manual for detailed information on these.

The problem for us is:  The IKJTSOnn member can have many many entries,
and it can be a big table.  IKJTABLS as shipped, only has a few slots
for entries.  But it can be enlarged, unlimitedly, for all practical
purposes.

So this file is to show you how to enlarge IKJTABLS, copy all the
IKJTSOnn entries into it, leave a zillion more slots for any other
programs you may desire to run authorized, and run all this privately
and merrily from your own APF authorized STEPLIB DD.

File 185 is a source file which has disassembled source for my own
IKJTABLS csects.  This is along with enough JCL to reassemble it.
(I used STARTOOL FDM from Serena to create this disassembled source.
In fact, with STARTOOL FDM, this entire business can be done in less
than half an hour, and these two files are really unnecessary,
because you can create the whole thing instantly with the STARTOOL
FDM disassembler and its type-over full-screen load module zapper.)

The LOADLIB member of this pds (which is in TSO XMIT format),
produces my own IKJTABLS load module with its aliases, which can
probably be used as-is in an authorized STEPLIB on any TSO/E 2.n
(or higher) system.

Again.  Please remember that you're the system doctor.  When you
run anything authorized there is always potential to put the system
in peril.  You're there to fix stuff, not to ruin your company's
valuable investment in electronic data processing.  Anyway, I'd
feel better if you all read this cautionary statement.  Thanks.


Good luck.  Be careful.  Thanks.


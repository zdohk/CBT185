***********************************************************************
*                                                                     *
*   Program Name:   TSUB                                              *
*                                                                     *
*  Documentation:   This program is meant to be run as a TSO          *
*                   command, APF authorized except for the display    *
*                   functions.                                        *
*                                                                     *
*    Environment:   TSO command, APF Authorized.                      *
*                   PUTLINE interface enabled by APUT, EPUTL.         *
*                   This program is non-reentrant.                    *
*                                                                     *
* Short Function:   This program deals with existing TSO "auth"       *
*                   tables that are pointed to by fields in the       *
*                   LWA (Logon Work Area) which is created for a      *
*                   TSO session at LOGON time.  These tables are      *
*                   the actual tables that your TSO session uses      *
*                   to determine program authorization.  Many of      *
*                   the characteristics of these tables can be        *
*                   changed or reset by the TSUB program.  The        *
*                   changes that TSUB can do, are of two types:       *
*                                                                     *
*                   1.  Replacing or blanking any table entry.        *
*                   2.  Altering the LWA flags or fields that         *
*                       determine this table's properties.            *
*                   3.  Effectively nullifying an entry by            *
*                       putting a C'?' into it.  This effectively     *
*                       removes the entry, without nullifying any     *
*                       of the following table entries.               *
*                                                                     *
*                Details:                                             *
*                                                                     *
*                   1.  TSUB can substitute a different program name  *
*                       or insert a blank entry into any valid slot   *
*                       of a TSO "auth" table that belongs to your    *
*                       TSO session.                                  *
*                                                                     *
*                       Blanking (not the last entry) is dangerous    *
*                       (see below) because it invalidates all the    *
*                       subsequent non-blank table entries.  But the  *
*                       technique of blanking an entry can be used    *
*                       carefully if you are sure of what you want    *
*                       to accomplish.                                *
*                                                                     *
*                       But you can effectively nullify a table       *
*                       entry without blanking it, using the          *
*                       "nullify" function "N" instead of the         *
*                       "blanking" function "B".  The nullifying      *
*                       function inserts a C'?' into the slot,        *
*                       allowing all following slots to still         *
*                       work, since a ? entry is not a blank that     *
*                       delimits the table.                           *
*                                                                     *
*                   2.  TSUB can change the characteristics of your   *
*                       own session's TSO "auth" tables, that are     *
*                       pointed to by the LWA, by means of changing   *
*                       the LWA (Logon Work Area) settings for each   *
*                       table.  For example, LWA table lengths can    *
*                       be supplied or removed.  LWA flags marking    *
*                       the table as coming from a STEPLIB can be     *
*                       set, or removed.  Even the physical table     *
*                       header can be altered to make the table       *
*                       look as though it came from PARMLIB.          *
*                                                                     *
*   Introduction:   At LOGON time for a TSO session, the system       *
*                   copies a set of the E2, E8, AP, and NS TSO        *
*                   authorization tables into SP 252 protected Key 0  *
*                   storage which lies in the TSO user's address      *
*                   space.  These are the tables WHICH ARE ACTUALLY   *
*                   USED by that TSO session, and their location is   *
*                   pointed to in the LWA control block (Logon Work   *
*                   Area).  The duration of these tables is for the   *
*                   life of that TSO session.  TSO LOGON processing   *
*                   creates both the LWA itself, and the copies of    *
*                   the auth tables that are used. TSUB displays and  *
*                   manipulates this copy of these tables--the ones   *
*                   that are actually in use. Thus, changes to these  *
*                   tables are effective immediately, and their       *
*                   scope affects only the issuing TSO session.       *
*                                                                     *
*                   Where does TSO get these tables from, at LOGON    *
*                   time?                                             *
*                                                                     *
*              Case 1.  The most commonly found source for the auth   *
*                       tables pointed to in the LWA, is the "common  *
*                       storage" tables created from the active       *
*                       PARMLIB member IKJTSOxx.  Those are pointed   *
*                       to by the TPVT control block + X'14' which    *
*                       is the CTLT.  If the CTLT is the source of    *
*                       the LWA tables, then lengths of the tables,   *
*                       and the size of each entry, are copied from   *
*                       the CTLT into the LWA (Logon Work Area).      *
*                       Use the program called ASUB to directly       *
*                       access the public tables from PARMLIB that    *
*                       are pointed to by the CTLT (undocumented)     *
*                       control block.  Our program, TSUB, accesses   *
*                       the copy of those tables which is pointed to  *
*                       by the LWA, which were created for the TSO    *
*                       session at LOGON time, and which are unique   *
*                       to the current TSO session.                   *
*                                                                     *
*              Case 2.  If a list of table entries for one or more    *
*                       of the tables:  E2, E8, AP, or NS is not      *
*                       found in the IKJTSOxx PARMLIB member that     *
*                       is currently active, then the table in the    *
*                       LWA is not copied from the IKJTABLS module    *
*                       in LPALIB, but it is just pointed to.  Thus   *
*                       in such a situation, TSUB cannot alter the    *
*                       particular table.  The actual table is        *
*                       located in PLPA, in that particular case.     *
*                                                                     *
*              Case 3.  If a copy of the IKJTABLS load module         *
*                       containing csects IKJEFTE2, IKJEFTE8,         *
*                       IKJEFTAP, and IKJEFTNS is found in an         *
*                       APF-authorized STEPLIB that the TSO session   *
*                       has access to (running as an APF authorized   *
*                       STEPLIB only), then those E2, E8, NS, and AP  *
*                       tables are copied into the LWA at LOGON       *
*                       time, from that CSECT in the STEPLIB copy of  *
*                       IKJTABLS.  Therefore the table entries in     *
*                       the respective CSECTs of the IKJTABLS in the  *
*                       authorized STEPLIB are the ones which are in  *
*                       force for that user's TSO session.  But in    *
*                       that case, no "table lengths" or "number of   *
*                       table entries" from these tables, are         *
*                       available.  The table is delimited by the     *
*                       first blank entry in it.  This TSUB program   *
*                       has the ability to blank any numbered table   *
*                       entry.  Since a blank entry is a delimiter    *
*                       for the entire table, and all entries after   *
*                       the blank entry are no longer used, you       *
*                       have to be very careful.  Therefore, when     *
*                       blanking entries, you should usually blank    *
*                       the last one only, unless you have a very     *
*                       good reason to blank out a different entry,   *
*                       other than the last one.  The good news is    *
*                       that the effect of the TSUB program only      *
*                       lasts for the duration of this LOGON, and     *
*                       only for the userid that is currently running *
*                       the TSUB program.                             *
*                                                                     *
*            Note - Tables copied from a CSECT in IKJTABLS do not     *
*                   have lengths associated with them.  They are      *
*                   delimited by a blank table entry at the end.      *
*                   Therefore the copy of each such table pointed     *
*                   to by the LWA, does not have any length           *
*                   associated with it.  Therefore we can only        *
*                   judge its length by looking at the first blank    *
*                   entry that has been found by a forward scan.      *
*                                                                     *
*                   This program, TSUB, directly manipulates the      *
*                   "live" authorization tables pointed to by the     *
*                   LWA.  Supported tables are:  E2, E2, NS and       *
*                   AP.  The public PP (Platform Program) table       *
*                   and PC (Platform Command) table, not in the       *
*                   LWA, are also supported by this program, if       *
*                   they had been created by their presence in the    *
*                   active IKJTSOxx PARMLIB member.                   *
*                                                                     *
*    Description:   Display an Auth Table entry from any of the       *
*                   TSO/E program list tables:  IKJEFTE2, IKJEFTE8,   *
*                   IKJEFTNS or IKJEFTAP that are in storage.  Or     *
*                   display the entire table.  Or replace a numbered  *
*                   entry with a new program name.  Or blank out      *
*                   any numbered entry.  (Be very careful if you are  *
*                   attempting to blank an entry.  Blanking an entry  *
*                   invalidates ALL subsequent entries).  If you are  *
*                   invoking a display function, then the entire      *
*                   table is shown, unless you enter a number, and    *
*                   then, only that slot is shown.  The tables        *
*                   handled by this program are the actual tables     *
*                   pointed to by the LWA of the issuing TSO/E        *
*                   address space, and they lie in that user's        *
*                   TSO/E address space (unless they were pointed to, *
*                   and are from an IKJTABLS load module that is in   *
*                   the LPA list.)                                    *
*                                                                     *
*       Function:   To substitute one new program name in the local   *
*                   incore TSO auth tables, IKJEFTE2, IKJEFTE8, or    *
*                   IKJEFTAP, IKJEFTNS lists.  This is done to any    *
*                   numbered entry of each table.  Or else merely to  *
*                   display the contents of the entire table, or the  *
*                   contents of any particular numbered entry.        *
*                                                                     *
*                   The effect of replacing any program name is       *
*                   immediate.  The scope of the change, is just for  *
*                   the issuing current TSO userid.                   *
*                                                                     *
*                   You can blank out any numbered entry in any of    *
*                   the four tables.  But blanking an entry, will     *
*                   invalidate all subsequent table entries which     *
*                   follow the blanked entry slot.  So be careful!    *
*                                                                     *
*                   Better than blanking an entry, you can "nullify"  *
*                   an entry, which inserts a "?" character into the  *
*                   table entry instead of blanks.  The subsequent    *
*                   table entries remain valid.  The "nullify"        *
*                   function is "N".  The "blanking" function is      *
*                   "B".                                              *
*                                                                     *
*                   Or, you can use this program to list the complete *
*                   contents of any of the auth tables which are      *
*                   incore.                                           *
*                                                                     *
*                   Additionally, as described below, you can change  *
*                   fields in the LWA which characterize the          *
*                   individual tables--size characteristics and       *
*                   whether or not the table came from STEPLIB.       *
*                                                                     *
*         Syntax:   TSUB ttA nnn pgmname                              *
*                                                                     *
*                   Where tt is a table code, and A is an action      *
*                   code.                                             *
*                                                                     *
*                   The table code is a nickname for any of the       *
*                   TSO/E auth tables which are incore.  They are:    *
*                                                                     *
*                   E2 - IKJEFTE2 = AUTHCMD  entry in IKJTSOxx        *
*                   E8 - IKJEFTE8 = AUTHPGM  entry in IKJTSOxx        *
*                   AP - IKJEFTAP = AUTHTSF  entry in IKJTSOxx        *
*                   NS - IKJEFTNS = NOTBKGND entry in IKJTSOxx        *
*                   PP -            PLATPGM  table in IKJTSOxx        *
*                   PC -            PLATCMD  table in IKJTSOxx        *
*                                                                     *
*                   If the action code is B (blank the numbered       *
*                   entry), then no program name is required,         *
*                   but a number is required.  When blanking a        *
*                   table entry, BE VERY CAREFUL !!!!!                *
*                                                                     *
*                   If the action code is N (nullify the numbered     *
*                   entry), then no program name is required,         *
*                   but a number is required.  Nullifying a table     *
*                   entry will insert a "?" (question mark) into      *
*                   that particular table slot, effectively           *
*                   nullifying that entry, but NOT the entries        *
*                   which follow, since blanks are the table          *
*                   delimiters.                                       *
*                                                                     *
*     IMPORTANT  >  Under most circumstances, you should use the      *
*       N O T E  >  "nullify" function "N" instead of the "blanking"  *
*                >  function "B".  N will only nullify that one       *
*                >  table entry, leaving all subsequent entries       *
*                >  valid.  Blanking an entry will leave all          *
*                >  subsequent table entries invalid.                 *
*                                                                     *
*       WARNING  >  If you blank out an entry which is not the        *
*       WARNING  >  last entry in the particular table, then          *
*       WARNING  >  all subsequent entries in that table are          *
*       WARNING  >  rendered invalid!  It is best to restore          *
*       WARNING  >  a non-blank entry to that slot, using the         *
*       WARNING  >  ttR function, where tt is the table code.         *
*                   Then you will be able to display the rest         *
*                   of the table using the ttD function.              *
*                                                                     *
*                   If the action code is D (display the given        *
*                   entry), then no program name is required.         *
*                   The default action is to display the entire       *
*                   table, unless a number is entered.  If a          *
*                   number is present, then only that entry           *
*                   number is displayed.  If the number is larger     *
*                   than the number of entries in that particular     *
*                   table, then an informative error message is       *
*                   issued, and the program ends with code = 4.       *
*                                                                     *
*                   If the action code is R (replace the program      *
*                   name) then a number (the table entry number)      *
*                   and a program name are required.  If you want     *
*                   to blank that slot, instead of putting a          *
*                   program name into it, then use action code B.     *
*                   But if you are blanking any slot which is not     *
*                   the last slot, then PLEASE HEED THE WARNING       *
*                   THAT IS ABOVE.                                    *
*                                                                     *
*                   If the action code is H, then TSUB will replace   *
*                   the last 8 bytes of the table header with the     *
*                   literal: C' PARMLIB', as if the table were        *
*                   created from the IKJTSOxx member in PARMLIB.      *
*                                                                     *
*                   If the action code is L, then TSUB will look to   *
*                   create a length value for that table.  This value *
*                   is equal to the length of a table with all the    *
*                   non-blank entries, plus all the potential blank   *
*                   entries at the end of the table.  So this number  *
*                   will often reflect more entries than TSO will     *
*                   actually use.  Additionally, TSUB can change or   *
*                   blank any one of these entries, because TSUB's    *
*                   range depends on the number of entries indicated  *
*                   by the LWA length.  (If there's no length, then   *
*                   TSUB uses the length of all non-blank entries     *
*                   plus the first blank, if it exists.)              *
*                                                                     *
*                   If the action code is M, then TSUB will look to   *
*                   create a length value for that table.  This value *
*                   is equal to the length of a table with all the    *
*                   non-blank entries, plus one blank entry, if any   *
*                   perceived blank entries exist at the end of the   *
*                   table.                                            *
*                                                                     *
*                   If the action code is Z, then TSUB will look at   *
*                   the LWA length value for that table, and it will  *
*                   zero that length value, whether it already was    *
*                   zero, or not.                                     *
*                                                                     *
*                   If the action code is S, then TSUB will make      *
*                   the given table look like it came from STEPLIB,   *
*                   so that a subsequent PARMLIB UPDATE(xx) command   *
*                   will not overlay the session's auth table.        *
*                                                                     *
*                   If the action code is P, then TSUB will make      *
*                   the given table look like it came from PARMLIB,   *
*                   so that a subsequent PARMLIB UPDATE(xx) command   *
*                   will overlay the session's auth table.            *
*                                                                     *
*                   If the action code is X, then TSUB will display   *
*                   all the LPA address ranges (undocumented).        *
*                                                                     *
*                   If the PLATCMD or PLATPGM keywords (and at least  *
*                   one name) were not coded in the active IKJTSOxx   *
*                   PARMLIB entry, then there is no control block of  *
*                   names to be pointed to.  The condition is         *
*                   reported.  If these keywords WERE coded in the    *
*                   IKJTSOxx member of PARMLIB which is currently     *
*                   active, then the PC and PP table codes in TSUB    *
*                   WILL ACT ON THE COMMON STORAGE COPY of THESE      *
*                   TWO TABLES ONLY.                                  *
*                                                                     *
*  Recommendation:  First list the entire table using the "D"         *
*                   action code, and then decide which entry, by      *
*                   number, that you want to replace.                 *
*                                                                     *
*                   Then use the "R" action code, to replace the      *
*                   particular numbered entry you have chosen.        *
*                                                                     *
*            Note:  The E2, E8, AP, or NS table which is being        *
*                   used by the system, can come from either the      *
*                   IKJTSOxx PARMLIB entry, or it can come from       *
*                   an IKJTABLS load module which was running         *
*                   from an APF authorized library as a STEPLIB,      *
*                   or a default IKJTABLS entry in LPALIB.  Each      *
*                   CSECT is copied into the TSO user's address       *
*                   space, albeit in a protected key, and pointed     *
*                   to by the user's LWA, except in the case of an    *
*                   IKJTABLS CSECT that is in LPALIB.  These are      *
*                   the actual auth tables, E2, E8, AP, NS, in        *
*                   use by that TSO address space.                    *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Change Log:                                                        *
*    2008/09/10 - 1.0 - Initial version - Got it to work.             *
*                       TSUB can blank any slot.  I'm allowing        *
*                       that for now, because the scope of the        *
*                       possible damage is only for that TSO          *
*                       session as long as it is logged on.           *
*                       The LWA auth tables are all reset by          *
*                       logging on to that TSO session again.         *
*                                                                     *
*    2008/09/15 - 1.0 - Filled in and cleaned up some of the doc.     *
*                                                                     *
*    2009/01/28 - 1.0 - Added action codes: H, L, Z, S, P             *
*                                                                     *
*         All action codes except D need APF-authorization.           *
*                                                                     *
*         What they do:                                               *
*                                                                     *
*            H - Add PARMLIB-like table header, in 2nd 8-bytes.       *
*            L - Supply length of table in LWA with ALL the blanks.   *
*            M - Supply length of table to first blank, in LWA.       *
*            Z - Zero the table length marked in the LWA.             *
*            S - Mark that the table came from STEPLIB, so            *
*                 someone (else's) PARMLIB UPDATE(xx) won't           *
*                 overlay it.                                         *
*            P - Turn off STEPLIB bit in LWA and mark that it         *
*                 came from PARMLIB.  Now PARMLIB UPDATE(xx)          *
*                 will overlay the table.                             *
*            X - (undocumented) Gives LPA storage range display.      *
*                                                                     *
*         Other action codes are: (these are the original ones)       *
*                                                                     *
*            D - Display table entries by slot number.                *
*            R - Replace the entry in a given slot, by another one.   *
*            B - Blank a given table entry, by slot number.           *
*            N - Nullify a given table entry, by slot number.         *
*                 (It works by inserting a ? (question mark)          *
*                  into that table slot.)                             *
*                                                                     *
*    2009/02/01 - 1.1 - Fourth and fifth base registers.              *
*                                                                     *
*         Improved message clarity.  Told messages to show states,    *
*          "before" and "after" any changes were made.                *
*                                                                     *
*    2009/02/12 - 1.1 - Fix bug in calculating length of NS table.    *
*         Fix convoluted logic in calculating table lengths.          *
*                                                                     *
*    2009/02/13 - 1.1 - Measure perceived blanks after logical end    *
*         of the table.  For NS table, blank an entry with X'0000'    *
*         for the "length" field, instead of X'FFFF', to see more     *
*         perceived blanks, if there are any.                         *
*                                                                     *
*    2009/02/16 - 1.1 - Added option M to tailor length to reflect    *
*         only up to the first blank.  Changed option L to make the   *
*         LWA length equal to all non-blank entries plus all blank    *
*         entries too.  Thus the table can be expanded, even if       *
*         lengths are there.                                          *
*                                                                     *
*    2009/02/18 -1.1.31 Cosmetic changes. Put in Version numbers.     *
*                                                                     *
*    2009/02/20 -1.1.32 Improved displays for PC and PP tables.       *
*                       Made sure S,P,H,L,M,Z options for PC and PP   *
*                       actually do nothing, and say they do nothing. *
*                       Made "error display" messages better.         *
*                                                                     *
*    2009/02/24 -1.1.33 Better messages if PLATPGM or PLATCMD tables  *
*                       are missing.                                  *
*                                                                     *
*    2009/03/03 -1.1.34 More cosmetic changes in title & messages.    *
*                                                                     *
*    2011/03/24 -1.1.37 If an installation has an "authorization SVC" *
*                       already installed, put in a provision to use  *
*                       it with conditional assembly.  Of course,     *
*                       you have to code your own appropriate         *
*                       invocation code for the SVC, and its number,  *
*                       in the AUTHON and AUTHOFF macros provided     *
*                       in this code here.  Otherwise, SETC the &SVC  *
*                       variable to 'NOSVC'                           *
*                                                                     *
*    2016/10/30 -1.1.38 A Blanking function on a table entry will     *
*                       invalidate all subsequent table entries.      *
*                       So I introduced a "nullify" function "N"      *
*                       which will put a question mark, followed      *
*                       by seven blanks, into a table entry,          *
*                       effectively nullifying that entry, without    *
*                       nullifying all the following entries too.     *
*                                                                     *
*    2016/12/07 -1.1.39 Describe the nullify function in HELP.        *
*                                                                     *
*                                                                     *
***********************************************************************
